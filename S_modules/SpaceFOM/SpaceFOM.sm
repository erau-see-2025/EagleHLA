/*****************************************************************************
 * General TrickHLA Space Reference Federation Object Model (SpaceFOM)
 * Simulation Definition Object
 *---------------------------------------------------------------------------*
 * This is a Simulation Definition (S_define) module that defines a general
 * HLA interface using TrickHLA for Trick based simulations.
 ****************************************************************************/
/*****************************************************************************
 *       Author: Edwin Z. Crues
 *         Date: April 2020
 *       E-Mail: Edwin.Z.Crues@nasa.gov
 *        Phone: 281-483-2902
 * Organization: Mail Code ER7
 *               Simulation & Graphics Branch
 *               Software, Robotics & Simulation Division
 *               2101 NASA Parkway
 *               Houston, Texas 77058
 *---------------------------------------------------------------------------*
 * Modified By: Edwin Z. Crues
 *        Date: April 2020
 * Description: Extended THLABase.sm to support SpaceFOM.
 ****************************************************************************/

// TrickHLA SimObject base class.
#include "THLABase.sm"

// SpaceFOM Execution Control class definition.
##include "SpaceFOM/ExecutionControl.hh"

// SpaceFOM Execution Configuration (ExCO) class definition.
##include "SpaceFOM/ExecutionConfiguration.hh"

// SpaceFOM Mode Transition Request Interaction Handler.
##include "SpaceFOM/MTRInteractionHandler.hh"

// Used for SpaceFOM Root Reference Frame discovery.
##include "SpaceFOM/RefFrameBase.hh"

// Complete SpaceFOM include file list to ensure IO source code gets generated.
##include "SpaceFOM/DynamicalEntity.hh"
##include "SpaceFOM/DynamicalEntityBase.hh"
##include "SpaceFOM/DynamicalEntityConditionalBase.hh"
##include "SpaceFOM/DynamicalEntityData.hh"
##include "SpaceFOM/DynamicalEntityDeleted.hh"
##include "SpaceFOM/DynamicalEntityLagComp.hh"
##include "SpaceFOM/DynamicalEntityLagCompBase.hh"
##include "SpaceFOM/DynamicalEntityLagCompInteg.hh"
##include "SpaceFOM/DynamicalEntityOwnershipHandler.hh"
##include "SpaceFOM/LRTreeBase.hh"
##include "SpaceFOM/LRTreeNodeBase.hh"
##include "SpaceFOM/PhysicalEntity.hh"
##include "SpaceFOM/PhysicalEntityBase.hh"
##include "SpaceFOM/PhysicalEntityConditionalBase.hh"
##include "SpaceFOM/PhysicalEntityData.hh"
##include "SpaceFOM/PhysicalEntityDeleted.hh"
##include "SpaceFOM/PhysicalEntityLagComp.hh"
##include "SpaceFOM/PhysicalEntityLagCompBase.hh"
##include "SpaceFOM/PhysicalEntityLagCompInteg.hh"
##include "SpaceFOM/PhysicalEntityOwnershipHandler.hh"
##include "SpaceFOM/PhysicalInterface.hh"
##include "SpaceFOM/PhysicalInterfaceBase.hh"
##include "SpaceFOM/PhysicalInterfaceConditionalBase.hh"
##include "SpaceFOM/PhysicalInterfaceData.hh"
##include "SpaceFOM/PhysicalInterfaceDeleted.hh"
##include "SpaceFOM/PhysicalInterfaceOwnershipHandler.hh"
##include "SpaceFOM/QuaternionData.hh"
##include "SpaceFOM/QuaternionEncoder.hh"
##include "SpaceFOM/RefFrameConditionalBase.hh"
##include "SpaceFOM/RefFrameData.hh"
##include "SpaceFOM/RefFrameDeleted.hh"
##include "SpaceFOM/RefFrameLagComp.hh"
##include "SpaceFOM/RefFrameLagCompBase.hh"
##include "SpaceFOM/RefFrameLagCompInteg.hh"
##include "SpaceFOM/RefFrameOwnershipHandler.hh"
##include "SpaceFOM/RefFrameState.hh"
##include "SpaceFOM/RefFrameTree.hh"
##include "SpaceFOM/RelStateBase.hh"
##include "SpaceFOM/SpaceTimeCoordinateData.hh"
##include "SpaceFOM/SpaceTimeCoordinateEncoder.hh"
##include "SpaceFOM/Types.hh"

//=========================================================================
// SIM_OBJECT: SpaceFOM - Extend the TrickHLA Base SimObject.
//=========================================================================

class SpaceFOMSimObject : public THLABaseSimObject {

 public:

   // The Space Reference FOM (SpaceFOM) Execution Configuration Object (ExCO).
   SpaceFOM::ExecutionConfiguration ExCO;

   // The Space Reference FOM (SpaceFOM) Execution Control object.
   SpaceFOM::ExecutionControl execution_control;

   SpaceFOMSimObject( double main_thread_data_cycle,
                      double main_thread_interaction_cycle,
                      unsigned short _1ST  = 1,
                      unsigned short _INIT = 60,
                      unsigned short _LAST = 65534 )
     : THLABaseSimObject( main_thread_data_cycle,
                          main_thread_interaction_cycle,
                          _1ST,
                          _INIT,
                          _LAST ),
       ExCO( "THLA.ExCO" ),
       execution_control( ExCO )
   {
      //-----------------------
      //-- DEFAULT DATA JOBS --
      //-----------------------
      ("default_data") federate.setup( federate_amb,
                                       manager,
                                       execution_control );
   }

 private:
   // Do not allow the implicit copy constructor or assignment operator.
   SpaceFOMSimObject( SpaceFOMSimObject const & rhs );
   SpaceFOMSimObject & operator=( SpaceFOMSimObject const & rhs );

   // Do not allow the default constructor.
   SpaceFOMSimObject();
};
